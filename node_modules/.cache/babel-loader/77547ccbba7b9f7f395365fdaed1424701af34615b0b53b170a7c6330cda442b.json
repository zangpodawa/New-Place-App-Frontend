{"ast":null,"code":"var _jsxFileName = \"/Users/dawazangpo/Documents/LAB/MERN-Projects/frontend/src/places/pages/UserPlaces.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserPlaces = () => {\n  _s();\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:8000/api/places/user${userId}`);\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PlaceList, {\n      items: loadedPlaces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UserPlaces, \"Jjx8x1DuBEzTmxOEV/N+WrTeEac=\", false, function () {\n  return [useHttpClient, useParams];\n});\n_c = UserPlaces;\nexport default UserPlaces;\nvar _c;\n$RefreshReg$(_c, \"UserPlaces\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PlaceList","ErrorModal","LoadingSpinner","useHttpClient","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPlaces","_s","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","places","err","children","items","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dawazangpo/Documents/LAB/MERN-Projects/frontend/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:8000/api/places/user${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  return (\n    <>\n      <PlaceList items={loadedPlaces} />\n    </>\n  );\n};\n\nexport default UserPlaces;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,+CAA+C;AACtE,OAAOC,cAAc,MAAM,mDAAmD;AAC9E,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAClD,MAAM;IAAEc,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGZ,aAAa,CAAC,CAAC;EAErE,MAAMa,MAAM,GAAGjB,SAAS,CAAC,CAAC,CAACiB,MAAM;EAEjCnB,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMJ,WAAW,CACpC,wCAAwCE,MAAM,EAChD,CAAC;QACDL,eAAe,CAACO,YAAY,CAACC,MAAM,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;IACjB,CAAC;IACDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,WAAW,EAAEE,MAAM,CAAC,CAAC;EAEzB,oBACEX,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA,CAACL,SAAS;MAACsB,KAAK,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAClC,CAAC;AAEP,CAAC;AAACjB,EAAA,CAvBID,UAAU;EAAA,QAEwCL,aAAa,EAEpDJ,SAAS;AAAA;AAAA4B,EAAA,GAJpBnB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\nexport const VALIDATOR_REQUIRE = () => ({\n  type: VALIDATOR_TYPE_REQUIRE\n});\n_c = VALIDATOR_REQUIRE;\nexport const VALIDATOR_FILE = () => ({\n  type: VALIDATOR_TYPE_FILE\n});\n_c2 = VALIDATOR_FILE;\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\n_c3 = VALIDATOR_MINLENGTH;\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\n_c4 = VALIDATOR_MAXLENGTH;\nexport const VALIDATOR_MIN = val => ({\n  type: VALIDATOR_TYPE_MIN,\n  val: val\n});\n_c5 = VALIDATOR_MIN;\nexport const VALIDATOR_MAX = val => ({\n  type: VALIDATOR_TYPE_MAX,\n  val: val\n});\n_c6 = VALIDATOR_MAX;\nexport const VALIDATOR_EMAIL = () => ({\n  type: VALIDATOR_TYPE_EMAIL\n});\n_c7 = VALIDATOR_EMAIL;\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"VALIDATOR_REQUIRE\");\n$RefreshReg$(_c2, \"VALIDATOR_FILE\");\n$RefreshReg$(_c3, \"VALIDATOR_MINLENGTH\");\n$RefreshReg$(_c4, \"VALIDATOR_MAXLENGTH\");\n$RefreshReg$(_c5, \"VALIDATOR_MIN\");\n$RefreshReg$(_c6, \"VALIDATOR_MAX\");\n$RefreshReg$(_c7, \"VALIDATOR_EMAIL\");","map":{"version":3,"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MIN","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_FILE","VALIDATOR_REQUIRE","type","_c","VALIDATOR_FILE","_c2","VALIDATOR_MINLENGTH","val","_c3","VALIDATOR_MAXLENGTH","_c4","VALIDATOR_MIN","_c5","VALIDATOR_MAX","_c6","VALIDATOR_EMAIL","_c7","validate","value","validators","isValid","validator","trim","length","test","$RefreshReg$"],"sources":["/Users/dawazangpo/Documents/LAB/MERN-Projects/frontend/src/shared/util/validators.js"],"sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
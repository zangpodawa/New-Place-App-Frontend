{"ast":null,"code":"var _jsxFileName = \"/Users/dawazangpo/Documents/LAB/MERN-Projects/frontend/src/user/pages/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport \"./Auth.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    if (isLoginMode) {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/users/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || \"Something went wrong, please try again.\");\n      }\n    } else {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/users/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || \"Something went wrong, please try again.\");\n      }\n    }\n  };\n  const errorHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a name.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email address.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(5)],\n          errorText: \"Please enter a valid password, at least 5 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? \"LOGIN\" : \"SIGNUP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Auth, \"S2qEBwhUypRjH3a0gcMT8HYPe+A=\", false, function () {\n  return [useForm];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Card","Button","Input","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","auth","isLoginMode","setIsLoginMode","isLoading","setIsLoading","error","setError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","login","err","errorHandler","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","asOverlay","onSubmit","element","id","type","label","validators","errorText","onInput","disabled","inverse","onClick","_c","$RefreshReg$"],"sources":["/Users/dawazangpo/Documents/LAB/MERN-Projects/frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport \"./Auth.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    if (isLoginMode) {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/users/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || \"Something went wrong, please try again.\");\n      }\n    } else {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/users/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || \"Something went wrong, please try again.\");\n      }\n    }\n  };\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
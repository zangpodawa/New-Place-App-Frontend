{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useRef, useEffect } from \"react\";\nexport const useHttpClient = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const activeHttpRequests = useRef([]);\n  const sendRequest = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal: httpAbortCtrl.signal\n      });\n\n      // Log the response to see what is being returned\n      const responseText = await response.text();\n      let responseData;\n      try {\n        responseData = JSON.parse(responseText);\n      } catch (err) {\n        console.error(\"Response is not valid JSON:\", responseText);\n        throw new Error(\"Response is not valid JSON\");\n      }\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\n      if (!response.ok) {\n        throw new Error(responseData.message || \"Something went wrong!\");\n      }\n      setIsLoading(false);\n      return responseData;\n    } catch (err) {\n      if (err.name === \"AbortError\") {\n        console.log(\"Request was aborted\");\n      } else {\n        setError(err.message || \"Something went wrong!\");\n        console.log(err);\n      }\n      setIsLoading(false);\n      throw err;\n    }\n  }, []);\n  const clearError = () => {\n    setError(null);\n  };\n  useEffect(() => {\n    return () => {\n      // Cleanup active requests on component unmount\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  };\n};\n_s(useHttpClient, \"Hea+2NHrzWj/jqa6a9Bi/l2vNhE=\");","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","useHttpClient","_s","isLoading","setIsLoading","error","setError","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseText","text","responseData","JSON","parse","err","console","Error","filter","reqCtrl","ok","message","name","log","clearError","forEach","abortCtrl","abort"],"sources":["/Users/dawazangpo/Documents/LAB/MERN-Projects/frontend/src/shared/hooks/http-hook.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        // Log the response to see what is being returned\n        const responseText = await response.text();\n        let responseData;\n\n        try {\n          responseData = JSON.parse(responseText);\n        } catch (err) {\n          console.error(\"Response is not valid JSON:\", responseText);\n          throw new Error(\"Response is not valid JSON\");\n        }\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message || \"Something went wrong!\");\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Request was aborted\");\n        } else {\n          setError(err.message || \"Something went wrong!\");\n          console.log(err);\n        }\n\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // Cleanup active requests on component unmount\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEhE,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,kBAAkB,GAAGR,MAAM,CAAC,EAAE,CAAC;EAErC,MAAMS,WAAW,GAAGV,WAAW,CAC7B,OAAOW,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IACxDR,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMS,aAAa,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC3CP,kBAAkB,CAACQ,OAAO,CAACC,IAAI,CAACH,aAAa,CAAC;IAE9C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAE;QAChCC,MAAM;QACNC,IAAI;QACJC,OAAO;QACPO,MAAM,EAAEN,aAAa,CAACM;MACxB,CAAC,CAAC;;MAEF;MACA,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC1C,IAAIC,YAAY;MAEhB,IAAI;QACFA,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC;MACzC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZC,OAAO,CAACrB,KAAK,CAAC,6BAA6B,EAAEe,YAAY,CAAC;QAC1D,MAAM,IAAIO,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEApB,kBAAkB,CAACQ,OAAO,GAAGR,kBAAkB,CAACQ,OAAO,CAACa,MAAM,CAC3DC,OAAO,IAAKA,OAAO,KAAKhB,aAC3B,CAAC;MAED,IAAI,CAACI,QAAQ,CAACa,EAAE,EAAE;QAChB,MAAM,IAAIH,KAAK,CAACL,YAAY,CAACS,OAAO,IAAI,uBAAuB,CAAC;MAClE;MAEA3B,YAAY,CAAC,KAAK,CAAC;MACnB,OAAOkB,YAAY;IACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,IAAIA,GAAG,CAACO,IAAI,KAAK,YAAY,EAAE;QAC7BN,OAAO,CAACO,GAAG,CAAC,qBAAqB,CAAC;MACpC,CAAC,MAAM;QACL3B,QAAQ,CAACmB,GAAG,CAACM,OAAO,IAAI,uBAAuB,CAAC;QAChDL,OAAO,CAACO,GAAG,CAACR,GAAG,CAAC;MAClB;MAEArB,YAAY,CAAC,KAAK,CAAC;MACnB,MAAMqB,GAAG;IACX;EACF,CAAC,EACD,EACF,CAAC;EAED,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB5B,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX;MACAO,kBAAkB,CAACQ,OAAO,CAACoB,OAAO,CAAEC,SAAS,IAAKA,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAElC,SAAS;IAAEE,KAAK;IAAEG,WAAW;IAAE0B;EAAW,CAAC;AACtD,CAAC;AAAChC,EAAA,CApEWD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}